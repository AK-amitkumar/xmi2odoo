#!/usr/bin/env python
##############################################################################
#
#    XMI2OERP, XMI convesort to OpenERP module
#    Copyright (C) 2012 Coop Trab Moldeo Interactive, Grupo AdHoc S.A.
#    (<http://www.moldeointeractive.com.ar>; <www.grupoadhoc.com.ar>).
#
#    This program is free software: you can redistribute it and/or modify
#    it under the terms of the GNU Affero General Public License as
#    published by the Free Software Foundation, either version 3 of the
#    License, or (at your option) any later version.
#
#    This program is distributed in the hope that it will be useful,
#    but WITHOUT ANY WARRANTY; without even the implied warranty of
#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#    GNU Affero General Public License for more details.
#
#    You should have received a copy of the GNU Affero General Public License
#    along with this program.  If not, see <http://www.gnu.org/licenses/>.
#
##############################################################################

import sys, os
import argparse

def convert(func, infile, logfile, target):
    """
    Convert XMI file to a set of OpenERP modules.
    """
    import pdb; pdb.set_trace()
    pass

def main():
    """
    Main function. Parse arguments and execute conversion.
    """
    parser = argparse.ArgumentParser()

    parser.add_argument('infile', nargs='?',
                        type=argparse.FileType('r'),
                        default=sys.stdin,
                        help='XMI input file')
    parser.add_argument('logfile', nargs='?',
                        type=argparse.FileType('w'),
                        default=sys.stdout,
                        help='Log processing')
    parser.add_argument('target', metavar='target', type=str, nargs='?', help='Target directory of openerp modules')

    parser.set_defaults(func=convert,
                        target=os.getcwd())

    args = parser.parse_args()

    try:
        args.func(**args.__dict__)
    except Exception, m:
        print   "ERROR:", m.message
        return -1
    return 0

if __name__ == '__main__':
        main()

# vim:expandtab:smartindent:tabstop=4:softtabstop=4:shiftwidth=4:
