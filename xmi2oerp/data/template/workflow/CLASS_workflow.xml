<?xml version="1.0" encoding="utf-8"?>
<!--
${LICENSE_HEADER}\
-->
<openerp>
    <data>
{% for sm in CLASS.iter_over_inhereted_attrs('statemachines') %}\
{% def wkfname() %}${CLASS.name}_${sm.name}_wkf{% end %}\
        <!-- Workflow -->

        <record id="${wkfname()}" model="workflow">
            <field name="name">${CLASS.oerp_id()}.${sm.name}</field>
            <field name="osv">${CLASS.oerp_id()}</field>
            <field name="on_create">True</field>
        </record>

        <!-- Activities -->

{%   for s in sm.list_states() %}\
        <record id="act_${CLASS.name}_${sm.name}_${s.name}" model="workflow.activity">
            <field name="wkf_id" ref="${wkfname()}"/>
{%     if s.is_initial() %}\
            <field name="flow_start">True</field>
{%     end %}\
{%     if s.is_final() %}\
            <field name="flow_stop">True</field>
{%     end %}\
            <field name="name">${s.tag['label']}</field>
{%     if 'action' in s.tag %}\
            <field name="action">${act.tag['action']}</field>
            <field name="kind">function</field>
{%     end %}\
{%     if 'action' not in s.tag %}\
            <field name="action">write({'state':'${s.name}'})</field>
            <field name="kind">function</field>
{%     end %}\
        </record>
{%   end %}\

        <!-- Transitions -->

{%   for t in sm.middle_transitions() %}\
        <record id="t${t.id}" model="workflow.transition">
            <field name="act_from" ref="act_${CLASS.name}_${sm.name}_${t.state_from.name}"/>
            <field name="act_to" ref="act_${CLASS.name}_${sm.name}_${t.state_to.name}"/>
{%     if t.trigger is not None %}\
            <field name="signal">sgn_${t.trigger.name}</field>
{%     end %}\
{%     if t.guard is not None %}\
            <field name="condition">${t.guard.body}</field>
{%     end %}\
{%     if 'trigger_model' in t.tag %}\
            <field name="trigger_model">${t.tag['trigger_model']}</field>
{%     end %}\
{%     if 'trigger_expr_id' in t.tag %}\
            <field name="trigger_expr_id">${t.tag['trigger_expr_id']}</field>
{%     end %}\
{%     if 'groups' in t.tag %}\
{% def groups() %}${','.join([ '(4, ref(\'%s\'))' % (name if '.' in name else 'group_%s' % name) for name in t.tag['groups'].split(',')])}{% end %}\
            <field name="group_ids" eval="${groups()}"/>
{%     end %}\
        </record>
{%   end %}\
{% end %}\
    </data>
</openerp>
<!-- vim:expandtab:smartindent:tabstop=4:softtabstop=4:shiftwidth=4
     -->
