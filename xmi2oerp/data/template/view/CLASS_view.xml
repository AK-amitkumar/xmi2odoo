<?xml version="1.0" encoding="utf-8"?>
<!--
${LICENSE_HEADER}\
-->
{% def model(s='.') %}${CLASS.oerp_id(s, False)}{% end %}\
{% def emodel(s='.') %}${CLASS.oerp_id(s)}{% end %}\
{% def pmodel(s='.') %}${CLASS.oerp_id(s, False, True)}{% end %}\
<!-- ${ model()  } -->
<!-- ${ emodel() } -->
<!-- ${ pmodel() } -->
<openerp>
    <data>
{% if CLASS.oerp_id('-', False) != CLASS.oerp_id('-', False, True) and not CLASS.child_of[0].is_stereotype('disjoin_view') %}
{%  def view_filter_id() %}view_${model('_')}_filter{% end %}\
{%  def view_form_id()   %}view_${model('_')}_form{%   end %}\
{%  def view_tree_id()   %}view_${model('_')}_tree{%   end %}\
        <!-- INHERITED SEARCH -->
        <record id="${view_filter_id()}" model="ir.ui.view">
            <field name="name">${model()}.select</field>
            <field name="model">${emodel()}</field>
            <field name="inherit_id" ref="${ CLASS.parent().get('view_search_id', 'view_'+CLASS.oerp_id('_', False, True)+'_filter')}"/>
            <field name="arch" type="xml">
                <!--field name="${(lambda a : a and a[-1].name or 'name')(list(iter(CLASS.parent().all_attributes(stereotype='search'))))}" position="after"-->
                <search position="inside">
{%                  for col in CLASS.all_attributes(stereotype='search', parents=False) %}\
                        <field name="${col.name}"
{%                    if 'view_groups' in col.tag or 'groups' in col.tag %}\
                            groups="${','.join([col.tag.get('view_groups',''),col.tag.get('groups','')])}"
{%                    end %}\
                            />
{%                  end %}\
{%                  for ass in CLASS.all_associations(stereotype='search', parents=False) %}\
                        <field name="${ass.name}"
{%                    if 'view_groups' in ass.tag or 'groups' in ass.tag %}\
                            groups="${','.join([ass.tag.get('view_groups',''),ass.tag.get('groups','')])}"
{%                    end %}\
                            />
{%                  end %}\
                </search>
                <!--/field-->
            </field>
        </record>
 
        <!-- INHERITED FORM -->
        <record id="${view_form_id()}" model="ir.ui.view">
            <field name="name">${model()}.form</field>
            <field name="model">${emodel()}</field>
            <field name="inherit_id" ref="${ CLASS.parent().get('view_form_id', 'view_'+CLASS.oerp_id('_', False, True)+'_form')}"/>
            <field name="arch" type="xml">
                <!--field name="${(lambda a : a and a[-1].name or 'name')(list(CLASS.parent().all_attributes(stereotype='form')))}" position="after"-->
                <group position="inside">
{%                  for col in CLASS.all_attributes(stereotype='form', parents=False) %}\
                        <field name="${col.name}"
{%                    if 'view_groups' in col.tag or 'groups' in col.tag %}\
                            groups="${','.join([col.tag.get('view_groups',''),col.tag.get('groups','')])}"
{%                    end %}\
                            />
{%                  end %}\
{%                  for ass in CLASS.all_associations(stereotype='form', parents=False) %}\
                        <field name="${ass.name}"
{%                    if 'view_groups' in ass.tag or 'groups' in ass.tag %}\
                            groups="${','.join([ass.tag.get('view_groups',''),ass.tag.get('groups','')])}"
{%                    end %}\
                            />
{%                  end %}\
                </group>
                <!--/field-->
            </field>
        </record>

        <!-- INHERITED TREE -->
        <record id="${view_tree_id()}" model="ir.ui.view">
            <field name="name">${model()}.tree</field>
            <field name="model">${emodel()}</field>
            <field name="inherit_id" ref="${ CLASS.parent().get('view_tree_id', 'view_'+CLASS.oerp_id('_', False, True)+'_tree')}"/>
            <field name="arch" type="xml">
                <field name="${(lambda a : a and a[-1].name or 'name')(list(CLASS.parent().all_attributes(stereotype='tree')))}" position="after">
{%                  for col in CLASS.all_attributes(stereotype='tree', parents=False) %}\
                    <field name="${col.name}"/>
{%                  end %}\
{%                  for ass in CLASS.all_associations(stereotype='tree', parents=False) %}\
                    <field name="${ass.name}"/>
{%                  end %}\
                </field>
            </field>
        </record>

{% end %}\
{% if CLASS.oerp_id('-', False) == CLASS.oerp_id('-', False, True) or CLASS.child_of[0].is_stereotype('disjoin_view') %}
{%  def view_filter_id() %}view_${model('_')}_filter{% end %}\
{%  def view_form_id() %}view_${model('_')}_form{% end %}\
{%  def view_tree_id() %}view_${model('_')}_tree{% end %}\
        <!-- SEARCHVIEW -->
        <record id="${view_filter_id()}" model="ir.ui.view">
            <field name="name">${model()}.select</field>
            <field name="model">${emodel()}</field>
            <field name="arch" type="xml">
                <search string="${CLASS_LABEL}" version="7.0">
{%                  for col in CLASS.all_attributes(stereotype='search') %}\
                        <field name="${col.name}"
{%                    if 'view_groups' in col.tag or 'groups' in col.tag %}\
                            groups="${','.join([col.tag.get('view_groups',''),col.tag.get('groups','')])}"
{%                    end %}\
                            />
{%                  end %}\
{%                  for ass in CLASS.all_associations(stereotype='search') %}\
                        <field name="${ass.name}"
{%                    if 'view_groups' in ass.tag or 'groups' in ass.tag %}\
                            groups="${','.join([ass.tag.get('view_groups',''),ass.tag.get('groups','')])}"
{%                    end %}\
                            />
{%                  end %}\
                </search>
            </field>
        </record>

        <!-- FORMVIEW -->
        <record id="${view_form_id()}" model="ir.ui.view">
            <field name="name">${model()}.form</field>
            <field name="model">${emodel()}</field>
            <field name="arch" type="xml">
                <form string="${CLASS_LABEL}" version="7.0">
                    <header>
{%                  for sm in list(CLASS.iter_over_inhereted_attrs('statemachines'))[0:1] %}\
{%                    for tri in [ t for t in set(sm.list_triggers()) ] %}\
{%                      for state in [ tra.state_to for tra in tri.sm_transitions(sm) if (not tra.state_from.is_initial() and tra.state_to.is_initial()) or (tra.state_from.is_final() and not tra.state_to.is_final()) ][0:1] %}\
                        <button name="action_wfk_set_${state.name}"
                            type="object"
{%                      end %}\
{%                      if not [ tra.state_to for tra in tri.sm_transitions(sm) if (not tra.state_from.is_initial() and tra.state_to.is_initial()) or (tra.state_from.is_final() and not tra.state_to.is_final()) ] %}\
                        <button name="sgn_${tri.name}"
{%                      end %}\
{%                          if 'class' in tri.tag %}\
                            class="${tri.tag['class']}"
{%                          end %}\
{%                          if 'type' in tri.tag %}\
                            type="${tri.tag['type']}"
{%                          end %}\
                            states="${','.join([ s.name for s in set(tri.list_states_from(sm)) ])}"
                            string="${tri.tag['label']}"
{%                          if 'groups' in tri.tag %}\
                            groups="${tri.tag['groups']}"
{%                          end %}\
{%                          if [ tra for tra in tri.sm_transitions(sm) if tra.is_stereotype('default') ] %}\
                            class="oe_highlight"
{%                          end %}\
                            />
{%                    end %}\
                        <field name="state" widget="statusbar"
                            statusbar_colors='${doublequote(repr(stereotype_dict(sm.list_states(),'name',{'exception':'red'})))}'
                            />
{%                  end %}\
                    </header>
                    <sheet string="${CLASS_LABEL}">
                     <group>
{%                  for col in CLASS.all_attributes(stereotype='form') %}\
                        <field name="${col.name}"
{%                    if 'view_groups' in col.tag or 'groups' in col.tag %}\
                            groups="${','.join([col.tag.get('view_groups',''),col.tag.get('groups','')])}"
{%                    end %}\
                            />
{%                  end %}\
{%                  for ass in CLASS.all_associations(stereotype='form') %}\
                        <field name="${ass.name}"
{%                    if 'view_groups' in ass.tag or 'groups' in ass.tag %}\
                            groups="${','.join([ass.tag.get('view_groups',''),ass.tag.get('groups','')])}"
{%                    end %}\
                            />
{%                  end %}\
                     </group>
                    </sheet>

{%      if CLASS.is_child_of('mail.thread') %}\
                    <div class="oe_chatter">
                        <field name="message_follower_ids" widget="mail_followers"/>
                        <field name="message_ids" widget="mail_thread"/>
                    </div>
{%      end %}\
                </form>
            </field>
        </record>

        <!-- TREEVIEW -->

        <record id="${view_tree_id()}" model="ir.ui.view">
            <field name="name">${model()}.tree</field>
            <field name="model">${emodel()}</field>
            <field name="arch" type="xml">
                <tree string="${CLASS_LABEL}"
{%                  if CLASS.is_child_of('ir.needaction_mixin') %}\
                    fonts="bold:message_unread==True" 
{%                  end %}\
{%                  for sm in [ sm for sm in CLASS.statemachines ] %}\
{% def colors() %}grey:state=='cancelled';blue:state in ${repr(tuple(names(sm.initial_states())))};black:state in ${repr(tuple(set(names(sm.middle_states()))-set(names(sm.stereotype_states('exceptional')))))}; red:state in ${repr(tuple(names(sm.stereotype_states('exceptional'))))}{% end %}\
                    colors="${colors()}"
{%                  end %}\
                    >
{%                  if CLASS.is_child_of('ir.needaction_mixin') %}\
                    <field name="message_unread" invisible="1"/>
{%                  end %}\
{%                  for col in CLASS.all_attributes(stereotype='tree') %}\
                    <field name="${col.name}"/>
{%                  end %}\
{%                  for ass in CLASS.all_associations(stereotype='tree') %}\
                    <field name="${ass.name}"/>
{%                  end %}\
{%                  for sm in [ sm for sm in CLASS.statemachines ] %}\
                    <field name="state"/>
{%                  end %}\
                </tree>
            </field>
        </record>
{% end %}\

        <!-- WINDOWACTION -->
        <record id="action_${model('_')}_form" model="ir.actions.act_window">
            <field name="name">${CLASS_LABEL}</field>
            <field name="res_model">${emodel()}</field>
            <field name="view_type">form</field>
            <field name="view_mode">tree,form</field>
            <field name="view_id" ref="${view_tree_id()}"/>
            <field name="search_view_id" ref="${view_filter_id()}"/>
{%          if CLASS_DOCUMENTATION is not None %}\
            <field name="help">${CLASS_DOCUMENTATION}</field>
{%          end %}\
        </record>

    </data>
</openerp>
<!-- vim:expandtab:smartindent:tabstop=4:softtabstop=4:shiftwidth=4
     -->
